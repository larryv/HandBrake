$(eval $(call import.MODULE.defs,LIBVPX,libvpx,YASM))
$(eval $(call import.CONTRIB.defs,LIBVPX))

LIBVPX.FETCH.url = http://download.handbrake.fr/contrib/libvpx-v1.3.0.tar.bz2

LIBVPX.CONFIGURE.args.host =
LIBVPX.CONFIGURE.deps  =
LIBVPX.CONFIGURE.extra =  \
    --enable-vp8-encoder  \
    --disable-vp9         \
    --disable-vp8-decoder \
    --disable-examples    \
    --disable-docs        \
    --disable-unit-tests

ifeq (1,$(BUILD.cross))
    LIBVPX.CONFIGURE.env.CROSS  = CROSS="$(BUILD.spec)-"
    LIBVPX.CONFIGURE.args.build =
endif

ifeq (1-i686,$(BUILD.cross)-$(BUILD.machine))
    LIBVPX.CONFIGURE.extra += --target=x86-win32-gcc
else ifeq (1-x86_64,$(BUILD.cross)-$(BUILD.machine))
    LIBVPX.CONFIGURE.extra += --target=x86_64-win64-gcc
endif

ifeq (yes,$(CCACHE))
    LIBVPX.CONFIGURE.extra += --enable-ccache
endif

ifeq (darwin,$(BUILD.system))
    osx_minor_version := $(word 2,$(subst ., ,$(MACOSX_DEPLOYMENT_TARGET)))
    ifneq ($(osx_minor_version),)
        darwin_vers := $(shell echo $$(($(osx_minor_version) + 4)))
        ifeq (i386,$(BUILD.arch))
            LIBVPX.CONFIGURE.extra += \
                --target=x86-darwin$(darwin_vers)-gcc
        else ifeq (ppc,$(BUILD.arch))
            LIBVPX.CONFIGURE.extra += \
                --target=ppc32-darwin$(darwin_vers)-gcc
        else
            LIBVPX.CONFIGURE.extra += \
                --target=$(BUILD.arch)-darwin$(darwin_vers)-gcc
        endif
    endif
endif

LIBVPX.BUILD.extra = quiet:=''
LIBVPX.INSTALL.extra = quiet:=''
LIBVPX.UNINSTALL.extra = quiet:=''
LIBVPX.CLEAN.extra = quiet:=''
